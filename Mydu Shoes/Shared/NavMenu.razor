@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject NavigationManager Navigation

<nav class="navbar navbar-expand-lg navbar-light bg-dark">
    <a class="navbar-brand" href="#">Mydu Shoes</a>
    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
    </button>
    <div class="collapse navbar-collapse justify-content-between" id="navbarNav">
        <ul class="navbar-nav ml-auto">
            <li class="nav-item active">
                <a class="nav-link" href="/">Trang chủ</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="/Product">Sản Phẩm</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="/about">Giới Thiệu</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="/contact">Liên Hệ</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="/invoices">Hóa Đơn</a>
            </li>
        </ul>
        <ul class="navbar-nav ml-auto">
            <li class="nav-item">
                <a class="nav-link" href="/cart">
                    <i class="fas fa-shopping-cart"></i> Giỏ Hàng
                </a>
            </li>
            @if (string.IsNullOrEmpty(Username))
            {
                <li class="nav-item active">
                    <a class="nav-link btn btn-primary" href="/admin/login">Đăng nhập</a>
                </li>
            }
            else
            {
                <li class="nav-item active">
                    <span class="nav-link">Xin chào, @Username!</span>
                </li>
                <li class="nav-item active">
                    <button class="nav-link btn btn-secondary" @onclick="Logout">Đăng xuất</button>
                </li>
            }
        </ul>
    </div>
</nav>

<style>
    .navbar {
        background-color: #1b2838 !important;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

    .navbar-brand {
        font-size: 1.5rem;
        font-weight: 700;
        color: #ffffff !important;
    }

    .nav-link {
        font-size: 1rem;
        color: #ffffff !important;
        transition: color 0.3s ease-in-out;
    }

        .nav-link:hover {
            color: #007bff !important;
        }

    .navbar-toggler {
        border-color: #007bff !important;
    }

    .navbar-toggler-icon {
        color: #007bff !important;
    }

    .btn-primary {
        background-color: #007bff;
        border: none;
        padding: 0.5rem 1rem;
        transition: background-color 0.3s ease-in-out;
    }

        .btn-primary:hover {
            background-color: #0056b3;
        }

    .btn-secondary {
        background-color: #6c757d;
        border: none;
        padding: 0.5rem 1rem;
        transition: background-color 0.3s ease-in-out;
    }

        .btn-secondary:hover {
            background-color: #5a6268;
        }

    .shadow-sm {
        box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075) !important;
    }

    .bg-white {
        background-color: #ffffff !important;
    }

    .rounded {
        border-radius: 0.25rem !important;
    }

    .font-weight-bold {
        font-weight: 700 !important;
    }

    .fa-shopping-cart {
        margin-right: 0.5rem;
    }
</style>

@code {
    private string Username { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            Username = await localStorage.GetItemAsync<string>("username");
            StateHasChanged();
        }
    }

    private async Task Logout()
    {
        await localStorage.RemoveItemAsync("username");
        Username = null;
        StateHasChanged();
        Navigation.NavigateTo("/");
        Navigation.NavigateTo("/", true);
    }
}
